#!/usr/bin/env ruby
require 'optparse'

# Default options
options = {
  :verbose => false,
  :preset => "High Profile"
}

OptionParser.new do |opt|
  opt.banner = "Usage: HandBrakeCLIBatch [-v | -p preset] [source] [destination]"

  opt.on("-v", "--verbose", "Run HandBrake in verbose mode (default: false)") do |v|
    options[:verbose] = v
  end

  opt.on("-p", "--preset PRESET", "Set the HandBrake preset by name (default: High Profile)") do |p|
    options[:preset] = p
  end

  opt.parse!
end

movies_dir = ARGV[0] || Dir.pwd
abort "Source directory '#{movies_dir}' does not exist!" unless File.exist?(movies_dir)
dest_dir = ARGV[1] || movies_dir
abort "Destination directory '#{dest_dir}' does not exist!" unless File.exist?(dest_dir)

puts "Converting from"
puts "  #{movies_dir} to"
puts "  #{dest_dir}"
puts "  with preset '#{options[:preset]}'"

movies_glob = File.join(movies_dir, "**/*.{avi,mkv,dvdmedia}")
files = Dir[movies_glob]
abort("No files to convert!") if files.empty?

files.each do |file|
  new_file  = File.basename(file, File.extname(file)) + ".m4v"
  dest_file = File.join(dest_dir, new_file)

  if File.exist?(dest_file)
    STDERR.puts "Converted file already exists!\n  #{dest_file}"
    next
  else
    puts "Converting #{File.basename(dest_file)}"
  end

  cmd = ["HandBrakeCLI"]
  cmd << "-v" if options[:verbose]
  cmd << '-i' << file
  cmd << '-o' << dest_file
  cmd << '--preset' << options[:preset]

  puts cmd.map {|arg| arg =~ /\s/ ? %{"#{arg}"} : arg }.join(" ")
  system *cmd
end

puts "Done!"
